---
- hosts: all
  become: true

  vars_files:
    - vars.yml

  pre_tasks:
    - name: Download kubeadm config images
      shell: kubeadm config images pull

  tasks:
    - name: Apped /etc/hostname 
      shell: echo "{{ k8smaster_hostname }}" > /etc/hostname 

    - name: Added node-ip in kubeadmi.conf
      shell: sed -i 's/config.yaml"/config.yaml --node-ip={{ k8smaster_ip }}"/g' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf

    - name: Reboot the machine
      shell: "sleep 5 && reboot"

      async: 1
      poll: 0

    - name: Wait for the machine to come back online
      wait_for_connection:
        connect_timeout: 300
        sleep: 5
        delay: 5
        timeout: 300

  ###---- Swarm
    - name: Docker Swarm init
      shell: docker swarm init --advertise-addr {{ k8smaster_ip }}
    
    - name: Creates join script join_swarm.sh
      copy:
        dest: "{{ vagrant_home_path }}/join_swarm.sh" 
        content: |
          #!/bin/bash
          docker swarm join \
            --token change_your_token_here \
            {{ k8smaster_ip }}:2377
        owner: vagrant
        group: vagrant
        mode: "0750"

    - name: Load vars
      shell: docker swarm join-token --quiet worker
      register: join_token

    - name: replace script swarm.sh
      shell: sed -i "s/\bchange_your_token_here\b/{{ join_token.stdout }} /g" join_swarm.sh 

  ###---- K8s
    - name: Kubeinit
      shell: |
        kubeadm init \
          --apiserver-advertise-address={{ k8smaster_ip }} \
          --apiserver-cert-extra-sans={{ k8smaster_ip }} \
          --pod-network-cidr=10.10.0.0/16 \
          --node-name {{ k8smaster_hostname }} \
          --ignore-preflight-errors Swap

    - name: "Creates dir at {{ vagrant_home_path }}/.kube"
      file:
        path: "{{ vagrant_home_path }}/.kube"
        owner: vagrant
        group: vagrant
        mode: "0750"
        remote_src: yes
        state: directory

    - name: Copy from /etc/kubernetes/admin.conf to "{{ vagrant_home_path }}/.kube/config"
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ vagrant_home_path }}/.kube/config"
        remote_src: yes
        owner: vagrant
        group: vagrant
        mode: "0750"

    - name: Kube apply Calico
      sudo_user: vagrant
      shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

    - name: Allow master node to execute pods
      sudo_user: vagrant
      shell: kubectl label node {{ k8smaster_hostname }} node-role.kubernetes.io/worker=worker-new
      
    - name: Remove taint (allow running pods)
      sudo_user: vagrant
      shell: kubectl taint nodes {{ k8smaster_hostname }} node-role.kubernetes.io/master-

    - name: Creates k8s join script
      sudo_user: vagrant
      shell: echo "#!/bin/bash" > {{ vagrant_home_path }}/join_k8s.sh

    - name: Append k8s join script with token
      sudo_user: vagrant
      shell: kubeadm token create --print-join-command >> {{ vagrant_home_path }}/join_k8s.sh