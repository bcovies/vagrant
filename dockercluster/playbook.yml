---
- hosts: all
  become: true

  vars_files:
    - vars.yml

  pre_tasks:
    - name: Update apt cache if needed
      apt: 
        update_cache: true 
        cache_valid_time: 3600

    - name: Install needed files
      apt: 
        update_cache: true 
        name: 
         - apt-transport-https
         - ca-certificates
         - curl
         - vim
         - git
         - gnupg 
         - lsb-release
         - openjdk-11-jdk

  handlers:
    - name: reload_daemon
      shell: systemctl daemon-reload 

    - name: enable_docker
      shell: systemctl enable docker

    - name: restart_docker
      shell: systemctl restart docker

    - name: enable_kubelet
      shell: systemctl enable kubelet

    - name: restart_kubelet
      shell: systemctl restart kubelet

    - name: restart_containerd
      shell: systemctl restart containerd

  tasks:
  ###------     CONFIGS
    - name: Copy ssh files
      copy:
        src: ../ssh_keys/
        dest: /home/vagrant/.ssh
        owner: vagrant
        group: vagrant
        mode: "0700"

    - name: disable swap
      shell: swapoff -a
    
    - name: modprobe
      shell: modprobe br_netfilter

    - name: Creates /etc/modules-load.d/k8s.conf config file
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          br_netfilter

    - name: Creates /etc/sysctl.d/k8s.conf config file
      copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1

    - name: Restarts sysctl
      shell: sysctl --system

    - name: Creates /etc/modules-load.d/containerd.conf config file
      copy:
        dest: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter

    - name: modprobe overlay
      shell: modprobe overlay

    - name: modprobe br_netfilter
      shell: modprobe br_netfilter

    - name: Creates /etc/sysctl.d/99-kubernetes-cri.conf config file
      copy:
        dest: /etc/sysctl.d/99-kubernetes-cri.conf
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-ip6tables = 1

    - name: Restarts sysctl
      shell: sysctl --system

    - name: Add admin keys to authorized_keys
      shell: cat /home/vagrant/.ssh/admin.pub >> /home/vagrant/.ssh/authorized_keys
  
    - name: Add docker to apt-key
      apt_key:
        url: "{{ docker_apt_key }}"
        state: present
      
    - name:  Add docker repository to apt_repository
      apt_repository:
        repo: deb "{{ docker_repo_url }}" focal stable
        state: present

    - name: Add k8s to apt-key
      apt_key:
        url: "{{ k8s_apt_key }}"
        state: present
      
    - name:  Add k8s to apt_repository 
      apt_repository:
        repo: deb "{{ k8s_repo_url }}" kubernetes-xenial main
        state: present

    - name: Update apt with new repositories
      apt: 
        update_cache: true 
        cache_valid_time: 3600

  ###------     DOCKER && containerD
    - name: Install docker-ce, docker-ce-cli && containerd.io
      apt: 
        name: 
          - docker-ce 
          - docker-ce-cli 
          - containerd.io
        state: present

    - name: "Creates dir at /etc/containerd"
      file:
        path: /etc/containerd
        owner: root
        group: root
        mode: "0750"
        remote_src: yes
        state: directory

    - name: Create containerd.io config file
      shell: containerd config default | tee /etc/containerd/config.toml

    - name: "Creates dir at /etc/systemd/system/docker.service.d"
      file:
        path: /etc/systemd/system/docker.service.d
        owner: root
        group: root
        mode: "0750"
        remote_src: yes
        state: directory

    - name:  Create daemon json config file
      copy:
        dest: /etc/docker/daemon.json
        content: |
            {
              "exec-opts": ["native.cgroupdriver=systemd"],
              "log-driver": "json-file",
              "log-opts": {
                "max-size": "100m"
              },
              "storage-driver": "overlay2"
            }

    - name: Copy override file (exposes to 0.0.0.0)
      copy:
        src: files/override.conf
        dest: /etc/systemd/system/docker.service.d/override.conf
      notify: 
        - enable_docker
        - restart_docker
        - restart_containerd
        - reload_daemon
        
    - name: Gives vagrant user docker permissions
      shell: usermod -aG docker vagrant

    - name: Install docker-compose from official github repo
      get_url:
        url : https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'

  ###------     K8S
    - name: Install kubelet, kubeadm && kubectl
      apt: 
        name: 
          - kubelet={{ k8s_apt_version }}
          - kubeadm={{ k8s_apt_version }}
          - kubectl={{ k8s_apt_version }}
        state: present

    - name: Apt-mark k8s
      shell: apt-mark hold kubelet kubeadm kubectl   

    - name: Reload sysctl
      shell: sysctl --system
      notify:
        - enable_kubelet
        - restart_kubelet
        
    - name: Download kube images
      shell: kubeadm config images pull

  ###----- OTHERS
    - name: Remove /etc/resolv.conf
      shell: rm -f /etc/resolv.conf

    - name: Update /etc/resolv.conf
      copy:
        dest: /etc/resolv.conf
        content: |
          nameserver 192.168.2.50
          nameserver 192.168.2.1